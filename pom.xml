<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2012, 2024 International Business Machines Corp. and others

  See the NOTICE file distributed with this work for additional information
  regarding copyright ownership. Licensed under the Apache License,
  Version 2.0 (the "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  SPDX-License-Identifier: Apache-2.0
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.eclipse.ee4j</groupId>
        <artifactId>project</artifactId>
        <version>1.0.9</version>
        <relativePath />
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>jakarta.batch</groupId>
    <artifactId>tck-parent</artifactId>
    <version>2.2.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Jakarta Batch TCK parent</name>
    <description>
        Batch processing is a pervasive workload pattern, expressed by a distinct application organization and
        execution model. It is found across virtually every industry, applied to such tasks as statement
        generation, bank postings, risk evaluation, credit score calculation, inventory management, portfolio
        optimization, and on and on. Nearly any bulk processing task from any business sector is a candidate for
        batch processing.
        Batch processing is typified by bulk-oriented, non-interactive, background execution. Frequently long-
        running, it may be data or computationally intensive, execute sequentially or in parallel, and may be
        initiated through various invocation models, including ad hoc, scheduled, and on-demand.
        Batch applications have common requirements, including logging, checkpointing, and parallelization.
        Batch workloads have common requirements, especially operational control, which allow for initiation
        of, and interaction with, batch instances; such interactions include stop and restart.
    </description>
    <url>https://projects.eclipse.org/projects/ee4j.batch</url>
    <licenses>
        <license>
            <name>Apache-2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>Most modules in this repository are licensed under the Apache License Version 2.0</comments>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:https://github.com/jakartaee/batch-tck.git</connection>
        <developerConnection>scm:git:https://github.com/jakartaee/batch-tck.git</developerConnection>
        <url>https://github.com/jakartaee/batch-tck</url>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <id>scottkurz</id>
            <name>Scott Kurz</name>
            <email>skurz@us.ibm.com</email>
        </developer>
        <developer>
            <id>dmbelina</id>
            <name>Dan Belina</name>
            <email>belina@us.ibm.com</email>
        </developer>
        <developer>
            <id>ajmauer</id>
            <name>Andrew Mauer</name>
            <email>ajmauer@us.ibm.com</email>
        </developer>
    </developers>

    <!-- Activate PGP signing only when performing a release -->
    <profiles>
        <profile>
            <id>perform-release</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-gpg-plugin</artifactId>
                            <version>${version.org.apache.maven.plugins.maven-gpg-plugin}</version>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <!--
            This profile enables consuming artifacts from the ossrh staging
            repository group.
        -->
        <profile>
            <id>staging</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <repositories>
                <repository>
                    <id>sonatype-nexus-staging</id>
                    <name>Sonatype Nexus Staging</name>
                    <url>https://jakarta.oss.sonatype.org/content/repositories/staging/</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>
        </profile>
    </profiles>

    <properties>

        <!--
             EDIT ME WHEN BUILDING A NEW VERSION
        -->

        <!-- Run against latest version of RI -->
        <batch.api.version>2.1.1</batch.api.version>
        <batch.impl.version>2.1.1</batch.impl.version>

        <!-- This version of TCK -->
        <batch.tck.version>2.2.0-SNAPSHOT</batch.tck.version>
        <!-- Named after the module since I'm not sure how to install a different name -->
        <batch.tck.archive.root>jakarta.batch.official.tck-${batch.tck.version}</batch.tck.archive.root>

        <!-- Convenience -->
        <nl>${line.separator}</nl>
        <fs>${file.separator}</fs>
        <ps>${path.separator}</ps>

        <!-- Building the project -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Target Java 11 -->
        <version.java>11</version.java>

        <!-- Dependencies -->
        <version.commons-codec.commons-codec>1.15</version.commons-codec.commons-codec>
        <version.commons-io.commons-io>2.11.0</version.commons-io.commons-io>
        <version.jakarta.enterprise.jakarta.enterprise.cdi-api>4.0.0</version.jakarta.enterprise.jakarta.enterprise.cdi-api>
        <version.jakarta.inject.jakarta.inject-api>2.0.1</version.jakarta.inject.jakarta.inject-api>
        <version.jakarta.xml.bind.jakarta.xml.bind-api>3.0.0</version.jakarta.xml.bind.jakarta.xml.bind-api>
        <version.org.glassfish.jaxb.jaxb-runtime>3.0.0</version.org.glassfish.jaxb.jaxb-runtime>

        <version.org.junit.jupiter>5.6.1</version.org.junit.jupiter>
        <version.org.junit.platform>1.7.2</version.org.junit.platform>
        <version.org.sonatype.plugins.nexus-staging-maven-plugin>1.6.6</version.org.sonatype.plugins.nexus-staging-maven-plugin>
        <version.com.mycila.maven-license-plugin.maven-license-plugin>1.10.b1</version.com.mycila.maven-license-plugin.maven-license-plugin>
        <version.org.apache.commons.commons-compress>1.26.1</version.org.apache.commons.commons-compress>
        <version.org.apache.maven.maven-settings>3.8.5</version.org.apache.maven.maven-settings>
        <version.org.apache.maven.plugins.maven-antrun-plugin>1.8</version.org.apache.maven.plugins.maven-antrun-plugin>
        <version.org.apache.maven.plugins.maven-compiler-plugin>3.8.1</version.org.apache.maven.plugins.maven-compiler-plugin>
        <version.org.apache.maven.plugins.maven-enforcer-plugin>1.4.1</version.org.apache.maven.plugins.maven-enforcer-plugin>
        <version.org.apache.maven.plugins.maven-failsafe-plugin>3.0.0-M5</version.org.apache.maven.plugins.maven-failsafe-plugin>
        <version.org.apache.maven.plugins.maven-gpg-plugin>1.4</version.org.apache.maven.plugins.maven-gpg-plugin>
        <version.org.apache.maven.plugins.maven-jar-plugin>2.4</version.org.apache.maven.plugins.maven-jar-plugin>
        <version.org.apache.maven.plugins.maven-javadoc-plugin>3.3.0</version.org.apache.maven.plugins.maven-javadoc-plugin>
        <version.org.apache.maven.plugins.maven-resources-plugin>2.7</version.org.apache.maven.plugins.maven-resources-plugin>
        <version.org.apache.maven.plugins.maven-shade-plugin>2.1</version.org.apache.maven.plugins.maven-shade-plugin>
        <version.org.apache.maven.plugins.maven-source-plugin>2.2.1</version.org.apache.maven.plugins.maven-source-plugin>
        <version.org.apache.maven.plugins.maven-surefire-plugin>2.18</version.org.apache.maven.plugins.maven-surefire-plugin>
        <version.org.apache.maven.plugins.maven-dependency-plugin>3.2.0</version.org.apache.maven.plugins.maven-dependency-plugin>
        <version.org.codehaus.mojo.properties-maven-plugin>1.0-alpha-2</version.org.codehaus.mojo.properties-maven-plugin>
        <!-- Note that since the tck.exec module is for sample purposes and testing the TCK itself, it is fine to include a non-final-release version here -->
        <version.org.jboss.weld.se.weld-se-core>5.0.0.Beta1</version.org.jboss.weld.se.weld-se-core>
        <version.org.jsoup.jsoup>1.15.3</version.org.jsoup.jsoup>
        <version.tck.jakarta.sigtest-maven-plugin>2.2</version.tck.jakarta.sigtest-maven-plugin>
    </properties>

    <modules>
        <module>com.ibm.jbatch.tck</module>
        <module>com.ibm.jbatch.tck.spi</module>
        <module>com.ibm.jbatch.tck.exec</module>
        <module>jakarta.batch.official.tck</module>
        <module>com.ibm.jbatch.tck.sigtest.exec</module>
        <module>com.ibm.jbatch.tck.ann</module>
        <module>com.ibm.jbatch.tck.ann.proc</module>
        <module>com.ibm.jbatch.tck.appbean</module>
        <module>jakarta.batch.reporting</module>
        <module>jakarta.batch.arquillian.exec-parent</module>
        <module>jakarta.batch.arquillian.extension</module>
        <module>jakarta.batch.tck.util</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${version.commons-io.commons-io}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>jakarta.batch-api</artifactId>
                <version>${batch.api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.ibm.jbatch</groupId>
                <artifactId>com.ibm.jbatch.spi</artifactId>
                <version>${batch.impl.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck</artifactId>
                <version>${batch.tck.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>jakarta.batch.tck.util</artifactId>
                <version>${batch.tck.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck.ann</artifactId>
                <version>${batch.tck.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck.ann.proc</artifactId>
                <version>${batch.tck.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck.appbean</artifactId>
                <version>${batch.tck.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck</artifactId>
                <version>${batch.tck.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck</artifactId>
                <version>${batch.tck.version}</version>
                <classifier>javadoc</classifier>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck.spi</artifactId>
                <version>${batch.tck.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck.spi</artifactId>
                <version>${batch.tck.version}</version>
                <classifier>sources</classifier>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>com.ibm.jbatch.tck.spi</artifactId>
                <version>${batch.tck.version}</version>
                <classifier>javadoc</classifier>
            </dependency>
            <!--
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>jakarta.batch.official.tck</artifactId>
                <version>${batch.tck.version}</version>
            </dependency>
            -->
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>jakarta.batch.arquillian.extension</artifactId>
                <version>${batch.tck.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.batch</groupId>
                <artifactId>jakarta.batch.reporting</artifactId>
                <version>${batch.tck.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.ibm.jbatch</groupId>
                <artifactId>com.ibm.jbatch.container</artifactId>
                <version>${batch.impl.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${version.jakarta.xml.bind.jakarta.xml.bind-api}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>jakarta.enterprise.cdi-api</artifactId>
                <version>${version.jakarta.enterprise.jakarta.enterprise.cdi-api}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.inject</groupId>
                <artifactId>jakarta.inject-api</artifactId>
                <version>${version.jakarta.inject.jakarta.inject-api}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${version.org.junit.jupiter}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-reporting</artifactId>
                <version>${version.org.junit.platform}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-commons</artifactId>
                <version>${version.org.junit.platform}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${version.org.apache.commons.commons-compress}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>10.17.1.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derbynet</artifactId>
                <version>10.1.1.0</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-core</artifactId>
                <version>${version.org.jboss.weld.se.weld-se-core}</version>
            </dependency>
            <dependency>
                <groupId>org.jsoup</groupId>
                <artifactId>jsoup</artifactId>
                <version>${version.org.jsoup.jsoup}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-settings</artifactId>
                <version>${version.org.apache.maven.maven-settings}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${version.commons-codec.commons-codec}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.mycila.maven-license-plugin</groupId>
                    <artifactId>maven-license-plugin</artifactId>
                    <version>${version.com.mycila.maven-license-plugin.maven-license-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-compiler-plugin}</version>
                    <configuration>
                        <source>${version.java}</source>
                        <target>${version.java}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-antrun-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-failsafe-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-jar-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-javadoc-plugin}</version>
                    <configuration>
                        <!-- xjc uses > rather than &gt for closing tags in a generated classes javadoc -->
                        <additionalparam>-Xdoclint:none</additionalparam>
                        <source>8</source>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-resources-plugin}</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-shade-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-source-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-surefire-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${version.org.apache.maven.plugins.maven-dependency-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${version.org.codehaus.mojo.properties-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>jakarta.tck</groupId>
                    <artifactId>sigtest-maven-plugin</artifactId>
                    <version>${version.tck.jakarta.sigtest-maven-plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <version>1.0.2</version>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>transform</goal>
                            </goals>
                            <configuration>
                                <transformationSets>
                                    <transformationSet>
                                        <dir>${project.build.directory}/failsafe-reports/</dir>
                                        <outputDir>${project.build.directory}/generated</outputDir>
                                        <stylesheet>${project.build.directory}/test-classes/test-summary-stylesheet.xsl</stylesheet>
                                        <includes>failsafe-summary.xml</includes>
                                    </transformationSet>
                                </transformationSets>

                                <!-- This is a bit unusual but the idea is to disable the transform and display of test results if we skip
                                    running the tests, since this will fail if we never ran the tests.  It's not the only way to have done
                                    it and some might prefer another way.  This way prevents someone from skipping with the
                                    properties -Dxml.skip -Decho.skip. Also it might be more logical to do skipITs, since we're generally
                                    using failsafe.  That all said, skipping is just a convenience and not part of a core flow, so
                                    let's go with this and it can be revisited if needed. -->
                                <skip>${skipTests}</skip>

                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.github.ekryd.echo-maven-plugin</groupId>
                    <artifactId>echo-maven-plugin</artifactId>
                    <version>1.3.2</version>
                    <executions>
                        <execution>
                            <id>test-summary</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>echo</goal>
                            </goals>
                            <configuration>
                                <fromFile>${project.build.directory}/generated/failsafe-summary.xml</fromFile>

                                <!-- See above comment in the xml-maven-plugin config -->
                                <skip>${skipTests}</skip>

                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[11,22)</version>
                                    <message>${line.separator}!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!${line.separator}! TCK must be run with Java 11 through 21 !${line.separator}!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!${line.separator}</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <configuration>
                    <bottom>
                        <![CDATA[
                    <p align="left">&#169; Copyright 2013, 2020 International Business Machines Corp. and others<br>Licensed under the Apache License, Version 2.0
                    ]]>
                    </bottom>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila.maven-license-plugin</groupId>
                <artifactId>maven-license-plugin</artifactId>
                <configuration>
                    <header>header.txt</header>
                    <skipExistingHeaders>true</skipExistingHeaders>
                    <!-- <strictCheck>true</strictCheck> -->
                    <aggregate>true</aggregate>
                    <excludes>
                        <exclude>**/*.md</exclude>
                        <exclude>**/*.txt</exclude>
                        <exclude>**/*.sql</exclude>
                        <exclude>**/build.properties</exclude>
                        <exclude>**/build.xml</exclude>
                        <exclude>**/src/test/resources/**</exclude>
                        <exclude>**/src/test/data/**</exclude>
                        <exclude>**/bin/**</exclude>
                        <exclude>**/jaxbgen/**</exclude>
                        <exclude>**/*.html</exclude>
                        <exclude>**/*.css</exclude>
                        <exclude>**/*.ddl</exclude>
                        <exclude>**/batch-tck-*.properties</exclude>
                        <exclude>**/batch-tck-impl-*.xml</exclude>
                        <exclude>**/beans.xml</exclude>
                    </excludes>
                    <includes>
                        <include>jakarta.batch/**</include>
                        <include>com.ibm.jbatch.tck.spi/**</include>
                        <include>com.ibm.jbatch.tck/**</include>
                    </includes>
                </configuration>
                <executions>
                    <!--
                <execution>
                    <id>check-headers</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
                    -->
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
